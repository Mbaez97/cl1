<?xml version="1.0"?>
<project name="Cluster ONE" default="usage" basedir=".">
	<!-- Package name and version number -->
	<loadproperties>
		<file file="etc/cl1.properties"/>
	</loadproperties>

	<!-- Directories -->
	<property name="build" location="build" />
	<property name="src" location="src" />
	<property name="test" location="test" />
	<property name="etc" location="etc" />
	<property name="lib" location="lib" />
	<property name="reports" location="reports" />

	<!-- Access to environment -->
	<property environment="os" />

	<!-- DON'T CHANGE ANYTHING BELOW THIS LINE
	UNLESS YOU KNOW WHAT YOU'RE DOING -->
	<property name="build.java" location="${build}/java" />
	<property name="src.java" location="${src}/java" />
	<property name="build.java.tests" location="${build}/java/tests" />
	<property name="src.java.tests" location="${test}/java" />

	<!-- External dependencies -->
	<property name="lib.cytoscape.path" location="${cytoscape.path}/cytoscape.jar" />
	<property name="lib.procope.path" location="${procope.path}/lib/procope_core-${procope.version}.jar" />

	<!-- Set up the default classpath -->
	<path id="classpath.base">
		<pathelement location="lib/tclib.jar" />
		<pathelement location="lib/commons-cli-1.2.jar" />
		<pathelement location="lib/tablelayout.jar" />
		<pathelement location="${lib.cytoscape.path}" />
		<pathelement location="${lib.procope.path}" />
	</path>

	<tstamp>
		<format property="TODAY" pattern="MMMM dd, yyyy" locale="en" />
	</tstamp>

	<!-- Check whether the Cytoscape and Procope paths are set correctly -->
	<available file="${lib.cytoscape.path}" property="cytoscape.ok" />
	<available file="${lib.procope.path}" property="procope.ok" />
	<if>
		<equals arg1="${cytoscape.ok}" arg2="true"/>
		<then></then>
		<else>
			<echo message="Cytoscape JAR not found at: ${lib.cytoscape.path}"
				  level="warning" />
		</else>
	</if>
	<if>
		<equals arg1="${procope.ok}" arg2="true"/>
		<then></then>
		<else>
			<echo message="Procope JAR not found at: ${lib.procope.path}"
				  level="warning" />
		</else>
	</if>

	<!-- Initializes the build tree, creates the necessary directories -->
	<target name="-init" description="Initializes the build process">
		<mkdir dir="${build}" />
		<mkdir dir="${build.java}" />
		<mkdir dir="${reports}" />
	</target>

	<!-- Deletes the existing build -->
	<target name="clean" description="Cleans up the build directories">
		<!-- Delete build directories -->
		<delete dir="${build.java}" />
		<delete dir="${reports}" />
	</target>

	<!-- Compiles the Java source code -->
	<target name="compile_java"
		depends="-init,compile_java_base,compile_java_cytoscape_plugin,compile_java_procope_plugin"
		description="--> compile Java code">
	</target>

	<!-- Compiles the base classes -->
	<target name="compile_java_base">
		<javac srcdir="${src.java}" destdir="${build.java}" target="1.5">
			<exclude name="**/cytoscape/*" />
			<exclude name="**/procope/*" />
			<classpath>
				<path refid="classpath.base" />
			</classpath>
		</javac>
	</target>

	<!-- Compiles the Cytoscape plugin -->
	<target name="compile_java_cytoscape_plugin" if="cytoscape.path"
		    depends="compile_java_base">
		<javac srcdir="${src.java}" destdir="${build.java}" target="1.5">
			<include name="${package.name.slashed}/ui/cytoscape/*.java" />
			<classpath>
				<path refid="classpath.base" />
			</classpath>
		</javac>
		<copy file="${etc}/cytoscape/plugin.props.in"
            tofile="${build.java}/${package.name.slashed}/plugin.props" />
        <replace file="${build.java}/${package.name.slashed}/plugin.props">
			<replacefilter token="@today@" value="${TODAY}" />
			<replacefilter token="@package.name@" value="${package.name}" />
			<replacefilter token="@package.version@" value="${package.version}" />
		</replace>
	</target>

	<!-- Compiles the Procope plugin -->
	<target name="compile_java_procope_plugin" if="procope.path"
		    depends="compile_java_base">
		<javac srcdir="${src.java}" destdir="${build.java}" target="1.5">
			<include name="${package.name.slashed}/ui/procope/*.java" />
			<classpath>
				<path refid="classpath.base" />
			</classpath>
		</javac>
	</target>

	<!-- Compiles the Java tests -->
	<target name="compile_tests" depends="-init"
		description="--> compile Java tests">
		<javac srcdir="${src.java.tests}" destdir="${build.java.tests}">
			<classpath>
				<path refid="classpath.base" />
				<pathelement location="${build.java}" />
				<pathelement location="${lib}/junit.jar" />
			</classpath>
		</javac>
	</target>

	<!-- Compiles the whole thing -->
	<target name="compile" depends="compile_java" description="Compiles all the source files">
	</target>

	<!-- Copies resource files to the build tree -->
	<target name="-copy_resources" depends="compile_java" description="Copies resource files to the build tree">
		<copy todir="${build.java}/${package.name.slashed}/resources">
			<fileset dir="${src.java}/${package.name.slashed}/resources" />
		</copy>
	</target>

	<!-- Creates the JAR file -->
	<target name="jar" depends="compile,-copy_resources" description="Creates the JAR file">
		<jar destfile="cluster_one-${package.version}.jar" basedir="${build.java}">
			<zipfileset src="lib/tclib.jar" includes="**/*.class" />
			<zipfileset src="lib/commons-cli-1.2.jar" includes="**/*.class" />
			<zipfileset src="lib/tablelayout.jar" includes="**/*.class" />
			<manifest>
				<attribute name="Manifest-Version" value="1.0" />
				<attribute name="Extension-Name" value="${package.name}" />
				<attribute name="Implementation-Version" value="${package.version}" />
				<attribute name="Main-Class" value="${package.name}.ui.CommandLineApplication" />
				<attribute name="Cytoscape-Plugin" value="${package.name}.ui.cytoscape.CytoscapePlugin" />
			</manifest>
		</jar>
	</target>

	<!-- Tests the whole thing -->
	<target name="test" depends="compile, compile_tests" description="Runs JUnit tests in the distribution">
		<junit printsummary="yes" fork="yes" haltonfailure="yes">
			<classpath>
				<pathelement location="${build.java.tests}" />
				<pathelement location="${build.java}" />
				<pathelement location="${lib}/junit.jar" />
			</classpath>

			<formatter type="plain" />

			<batchtest todir="${reports}">
				<fileset dir="${build}/tests">
					<include name="**/*Test*.class" />
					<exclude name="**/AllTests.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<!-- Main targets -->
	<target name="build" depends="compile, jar" description="Builds the whole project" />
	<target name="rebuild" depends="clean, build" description="Rebuilds the project from scratch" />

	<!-- Usage information target -->
	<target name="usage" description="Display usage information">
		<echo message="  Execute 'ant -projecthelp' for build file help." />
		<echo message="  Execute 'ant -help' for Ant help." />
	</target>
	<target name="help" depends="usage" />
</project>